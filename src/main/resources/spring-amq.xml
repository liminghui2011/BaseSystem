<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
			http://activemq.apache.org/schema/core
			http://activemq.apache.org/schema/core/activemq-core.xsd
			http://www.springframework.org/schema/jms
  		   	http://www.springframework.org/schema/jms/spring-jms.xsd
			http://www.springframework.org/schema/task
        	http://www.springframework.org/schema/task/spring-task-3.1.xsd">

	<!-- JMS ConnectionFactory to use, configuring the embedded broker using
		XML -->
	<amq:connectionFactory id="jmsFactory" brokerURL="vm://localhost" />
	
	<!-- lets create an embedded ActiveMQ Broker -->
	<amq:broker useJmx="false" persistent="false">
		<amq:transportConnectors>
			<amq:transportConnector uri="tcp://localhost:61616" />
			<amq:transportConnector uri="tcp://localhost:0" />
		</amq:transportConnectors>
	</amq:broker>

	<!-- ActiveMQ destinations to use -->
	<amq:queue id="amq.queue" physicalName="amq.queue"></amq:queue>

	<amq:topic id="amq.topic" physicalName="amq.topic"></amq:topic>

	 <bean id="pooledJmsConnectionFactory"
	   class="org.apache.activemq.pool.PooledConnectionFactory"
	   init-method="start" destroy-method="stop">
	   <property name="maxConnections" value="15" />
	   <property name="connectionFactory" ref="jmsFactory" />
	   <property name="expiryTimeout" value="-1" />
	   <property name="maximumActive" value="100" />
  	</bean>

	<!-- Spring JMS Template -->
	<bean id="myJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
			<!-- lets wrap in a pool to avoid creating a connection per send -->
			<bean class="org.springframework.jms.connection.SingleConnectionFactory">
				<property name="targetConnectionFactory">
					<ref bean="pooledJmsConnectionFactory" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="jmsMessageService" class="com.ocean.lmh.system.service.JmsMessageService">
		<property name="myJmsTemplate" ref="myJmsTemplate" />
		<property name="destination" ref="amq.topic" />
	</bean>

	<bean id="activemqMessageTest" class="com.ocean.lmh.system.service.ActivemqMessageTest">
	</bean>

	<jms:listener-container connection-factory="pooledJmsConnectionFactory"
	  acknowledge="auto"
	  destination-type="topic" >
	  <jms:listener destination="amq.topic" ref="activemqMessageTest"
	   method="onMessage" />
	</jms:listener-container>

</beans>